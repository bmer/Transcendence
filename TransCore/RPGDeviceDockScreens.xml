<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>
	
<!-- INSTALL DEVICE SCREEN =====================================================

	This screen asks the user to install a device from the ship's cargo hold.

	gData uses the following fields:

	checkMilitaryID:	If True we check to make sure the player has a military
						ID before selling them a military reactor.
						
	criteria:			If not Nil this is the set of devices that we should
						offer for installation. Otherwise, we default to "dUN"

	installPriceAdj:	The price to install the device. If Nil, we use the 
						item's default install price. If an integer, we treat it
						as a % price adjustment. If a function, we evaluate it
						to determine the price.

	noItemsText:		Text to show if itemList is empty
	
	replaceItem:		The installed device to replace (may be Nil).

-->

	<DockScreen UNID="&dsRPGInstallDevice;"
			type=				"itemPicker"
			inherit=			"&dsDockScreenBase;"
			nestedScreen=		"true"
			>

		<ListOptions
				dataFrom=	"player"
				list=		"*"
				>
			(block (
				(criteria (if (@ gData 'criteria) (@ gData 'criteria) "dUN"))
				)
				
				(scrSetListFilter gScreen (lambda (theItem)
					(and
						(itmMatches theItem criteria)
						(or
							(not (@ gData 'replaceItem))
							(not (itmIsEqual theItem (@ gData 'replaceItem) 'ignoreInstalled))
							)
						)
					))
				)
		</ListOptions>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (thisItem theResult)
						(setq theResult (rpgInstallDevicePrep {
							item: (scrGetItem gScreen)

							checkMilitaryID: (@ gData 'checkMilitaryID)
							currencyUsed: (objGetDefaultCurrency gSource)
							installerObj: gSource
							installPriceAdj: (@ gData 'installPriceAdj)
							itemInCargo: True
							replaceItem: (@ gData 'replaceItem)
							}))

						(if (@ gData 'replaceItem)
							(scrSetControlValue gScreen 'currentItem {
								source: gPlayerShip
								item: (@ gData 'replaceItem)
								})
							)
							
						(setq gCanInstall (@ theResult 'canInstall))
						(setq gCost (@ theResult 'price))

						; Set the description
						(scrSetDesc gScreen (@ theResult 'desc))
						(if (@ theResult 'descWarning)
							(scrSetControlValue gScreen 'descWarning (@ theResult 'descWarning))
							)

						; Disable actions
						(scrEnableAction gScreen 'actionInstall gCanInstall)
						)
				</OnPaneInit>

				<Controls>
					<ItemDisplay id="currentItem"/>
					<Text id="desc"/>
					<Text id="descWarning" style="warning"/>
				</Controls>

				<Actions>
					<Action id="actionInstall" default="1">
						(if gCanInstall
							(block (
								(recommendedSlot {
									deviceSlot: 
										(if (and (@ gData 'replaceItem)
												(itmGetInstallPos (@ gData 'replaceItem))
												)
											(itmGetInstallPos (@ gData 'replaceItem))
											-1
											)
									slotPosIndex: (@ gData 'slotPosIndex)
									})
								)
								
								(shpInstallDevice gPlayerShip (scrGetItem gScreen) recommendedSlot)
								(objCharge gPlayerShip (objGetDefaultCurrency gSource) gCost)
								(typSetData &svPlayer; 'tutorialInstalled True)
								
								;	If the original item is still installed, then uninstall it
							
								(if (and (@ gData 'replaceItem)
										(filter (objGetItems gPlayerShip "dI") theItem
											(itmIsEqual theItem (@ gData 'replaceItem))
											)
										)
									(shpRemoveDevice gPlayerShip (@ gData 'replaceItem))
									)
								
								;	Done
								
								(scrExitScreen gScreen)
								)
							)
					</Action>

					<Action id="actionCancel" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>
	
		<Language>
			<Text id="actionInstall">"[I]nstall"</Text>
		</Language>
	</DockScreen>

<!-- INSTALL DEVICE SCREEN =====================================================

	This screen asks the user to pick a device from a list of itemStructs and
	then installs the device (charging appropriately).

	gData uses the following fields:

	itemList:			This is a list of device itemStructs that we should 
						offer to install for the player.

	priceAdj:			A percent of standard price to charge. If Nil, we use
						the source's Trade directives. If an integer, we treat
						it as a % price adjustment (100 = 100% of price). If a
						function, we evaluate it to determine the price.

	installPriceAdj:	The price to install the device. If Nil, we use the 
						item's default install price. If an integer, we treat it
						as a % price adjustment. If a function, we evaluate it
						to determine the price.

	checkMilitaryID:	If True we check to make sure the player has a military
						ID before selling them a military reactor.

	noItemsText:		Text to show if itemList is empty

-->

	<DockScreen UNID="&dsRPGInstallDeviceFromList;"
			type=           "customItemPicker"
			nestedScreen=   "true"
			>

        <List>
			(@ gData 'itemList)
        </List>

        <Panes>
            <Default>
                <onPaneInit>
					(block (result)
						(setq gItem (scrGetItem gScreen))

						(if gItem
							(block (result)
								(setq gCost
									(add
										(rpgAdjustPrice gSource gItem (@ gData 'priceAdj) (objGetDefaultCurrency gSource) 'noInventoryCheck)
										(rpgAdjustInstallPrice gSource gItem (@ gData 'installPriceAdj) (objGetDefaultCurrency gSource))
										)
									)

								(setq result (rpgInstallDevicePrep {
									item: gItem
									totalPrice: gCost
									currencyUsed: (objGetDefaultCurrency gSource)
									checkMilitaryID: (@ gData 'checkMilitaryID)
									}))

								(scrSetDesc gScreen (@ result 'desc))
								(scrEnableAction gScreen 0 (@ result 'canInstall))
								)

							; No items in list
							(block Nil
								(scrSetDesc gScreen
									(if (@ gData 'noItemsText)
										(@ gData 'noItemsText)
										"You cannot install any items."
										)
									)
								(scrEnableAction gScreen 0 Nil)
								)
							)
						)
                </onPaneInit>

                <Actions>
                    <Action name="Buy &amp; Install this item" default="1" key="B">
						(block Nil
							(rpgBuyItem gSource gItem gCost (objGetDefaultCurrency gSource))
							(shpInstallDevice gPlayerShip gItem)
							(typSetData &svPlayer; 'tutorialInstalled True)
							(scrShowPane gScreen "InstallSuccess")
							)
                    </Action>

                    <Action name="Cancel" cancel="1" key="C">
                        (scrExitScreen gScreen)
                    </Action>
                </Actions>
            </Default>

			<InstallSuccess
					noListNavigation="true"
					>
				<OnPaneInit>
					(block Nil
						(scrSetDesc gScreen
							(cat (itmGetName gItem 0x01) " installed successfully.")
							)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
                        (scrExitScreen gScreen)
					</Action>
				</Actions>
			</InstallSuccess>
        </Panes>
    </DockScreen>

<!-- UPGRADE DEVICE SCREEN =====================================================

	This screen allows the player to buy and install a device.

	gData uses the following fields:

	'criteria: The device criteria to offer (default to "dUN")
	'checkMilitaryID: If True, we should check for a military ID before 
			installing Military armor. We also refuse to install Illegal armor.
	'replaceItem: The installed device to replace (may be Nil).

-->

	<DockScreen UNID="&dsRPGUpgradeDevice;"
			type=				"itemPicker"
			inherit=			"&dsDockScreenBase;"
			nestedScreen=		"true"
			>

		<ListOptions
				dataFrom=	"source"
				list=		"*"
				>
			(block (
				(criteria (if (@ gData 'criteria) (@ gData 'criteria) "dUN"))
				(minLevel (if (@ gData 'replaceItem) (itmGetLevel (@ gData 'replaceItem)) 1))
				)
				
				(scrSetListFilter gScreen (lambda (theItem)
					(and
						(itmMatches theItem criteria)
						(objGetSellPrice gSource theItem)
						(objGetItemProperty gSource theItem 'installDevicePrice)
						(or
							(not (@ gData 'replaceItem))
							(not (itmIsEqual theItem (@ gData 'replaceItem) 'ignoreInstalled))
							)
						(geq (itmGetLevel theItem) minLevel)
						)
					))
				)
		</ListOptions>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (thisItem theResult)
						(setq theResult (rpgInstallDevicePrep {
							item: (scrGetItem gScreen)

							upgrade: True
							checkMilitaryID: (@ gData 'checkMilitaryID)
							checkTotalPower: True
							currencyUsed: (objGetDefaultCurrency gSource)
							installerObj: gSource
							replaceItem: (@ gData 'replaceItem)
							}))

						(if (@ gData 'replaceItem)
							(scrSetControlValue gScreen 'currentItem {
								source: gPlayerShip
								item: (@ gData 'replaceItem)
								})
							)

						(scrSetData gScreen 'result theResult)
						(scrSetData gScreen 'cost (@ theResult 'price))
						
						; Set the description
						(scrSetDesc gScreen (@ theResult 'desc))

						; Disable actions
						(scrEnableAction gScreen 'actionBuyAndInstall (@ theResult 'canInstall))
						)
				</OnPaneInit>

				<Controls>
					<ItemDisplay id="currentItem"/>
					<Text id="desc"/>
				</Controls>
				
				<Actions>
					<Action id="actionBuyAndInstall" default="1">
						(block (
							(theItem (itmSetCount (scrGetItem gScreen) 1))
							(recommendedSlot {
								deviceSlot: 
									(if (and (@ gData 'replaceItem)
											(itmGetInstallPos (@ gData 'replaceItem))
											)
										(itmGetInstallPos (@ gData 'replaceItem))
										-1
										)
								slotPosIndex: (@ gData 'slotPosIndex)
								})
							)
							
							(rpgBuyItem gSource theItem (scrGetData gScreen 'cost) (objGetDefaultCurrency gSource))
							(shpInstallDevice gPlayerShip theItem recommendedSlot)
							(typSetData &svPlayer; 'tutorialInstalled True)
							(objRemoveItem gSource theItem)
							
							;	If the original item is still installed, then uninstall it
							
							(if (and (@ gData 'replaceItem)
									(filter (objGetItems gPlayerShip "dI") theItem
										(itmIsEqual theItem (@ gData 'replaceItem))
										)
									)
								(shpRemoveDevice gPlayerShip (@ gData 'replaceItem))
								)
								
							;	Done
							
							(scrExitScreen gScreen)
							)
					</Action>

					<Action id="actionCancel" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>
	
		<Language>
			<Text id="actionBuyAndInstall">"[B]uy and Install"</Text>
		</Language>
	</DockScreen>

</TranscendenceModule>